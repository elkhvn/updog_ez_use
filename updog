#!/bin/bash

# Initialize variables for arguments
filename=""
interface=""


# DEFAULT VALUES
port=9090
interface='eth0'
directory='./'
gen=''
start=''


# Help menu
function display_help() {
    echo "Usage: $(basename "$0") [options]"
    echo ""
    echo "Options:"
    echo "  -p, --port       				Specify a port. Default is 9090"
    echo "  -d, --directory    				Specify a directory. Default is ."
    echo "  -f, --filename    				Specify a filename."
    echo "  -i, --interface   				Specify an interface. Default eth0"
    echo "  -g, --generate   				Generate a curl command to upload a file to updog."
    echo "  -h, --help        				Display this help message."
    echo ""
    exit 0
}


function generate_curl(){
	ip=$(ip addr show $interface | grep -oP '(?<=inet\s)\d+(\.\d+){3}')
    echo 'curl.exe http://'$ip':'$port'/upload -X POST  -H "Content-Type: multipart/form-data" -F "file=@'$filename'" -F "path='$directory'"'
    exit 0;
}

function start_updog(){
	echo "Command executed: $command"
	$($command)
	exit 0;
}


command='python3 -m updog '

# Check and process arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            display_help
            ;;

    	-d|--directory )
			directory="$2"
			command+="-d $directory"
			shift 2
			;;

		-p|--port )
			port="$2"
			command+="-p $port"
			shift 2
			;;

        -i|--interface)
            interface="$2"
            shift 2
            ;;

		-f|--filename)
            filename="$2"
            shift 2
            ;;
        gen)
			gen='1'
			shift 1
			;;
		start)
			start='1'
			shift 1
			;;
        *)
            echo "Unknown option: $1"
            display_help
            ;;
    esac
done





# Check if the value equals "true"
if [[ -n "$start" ]]; then
    start_updog
elif [[ -n "$gen" ]]; then
	generate_curl
fi








